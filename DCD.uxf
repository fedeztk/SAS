<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2010</x>
      <y>1450</y>
      <w>410</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>SummarySheet
--

--
+create(s: Service, u:User)
//+setService(s:Service)
//+setOwner(o:Owner)
+isOwner(u: User): Boolean
+contains(t: Task):Boolean
+sortTasks(newtl: ArrayList&lt;Tasks&gt;):ArrayList&lt;Tasks&gt;
+addTask(j: Job)
+assignTask(t: Task, tl: ArrayList&lt;Turn&gt;, 
                     q: String?, t: Time?, c: Cook?)
+deleteTask(t: Task)
+modifyTask(task, tl?, portions?,
                  duration?, cook?, job?)
+disassignTask(t: Task)
+ taskDone(task)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2100</x>
      <y>1030</y>
      <w>310</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Task
--
- quantity : String
- time : Time
- done : Boolean
--
+create(j: Job)
+assignTask(tl: ArrayList&lt;Turn&gt;, 
                     q: String?, t: Time?, c: Cook?)
+disassignTask()
+modifyTask(tl?, portions?,
                     duration?, cook?, job?)
+done()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1570</x>
      <y>900</y>
      <w>870</w>
      <h>910</h>
    </coordinates>
    <panel_attributes>Kitchen task management</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1600</x>
      <y>1540</y>
      <w>380</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>KitchenTaskEventReceiver{interface}
--

--
/+updateSummarySheetCreated(ss: SummarySheet)/
/+updateTaskAdded(t: Task)/
/+updateTaskDeleted(t: Task)/
/+updateTaskAssigned(t: Task)/
/+updateTaskDisassigned(t: Task)/
/+updateTasksSorted(tl: ArrayList&lt;Task&gt;)/
/+updateTaskModified(t: Task)/
/+updateTaskDone(t: Task)/
/+updateKitchenTurnSat(kt: KitchenTurn)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2250</x>
      <y>1250</y>
      <w>80</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
taskList
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1310</x>
      <y>880</y>
      <w>950</w>
      <h>1100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
turnList
m1=0..n</panel_attributes>
    <additional_attributes>10.0;1070.0;40.0;1070.0;40.0;10.0;930.0;10.0;930.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2400</x>
      <y>120</y>
      <w>760</w>
      <h>1070</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
consistingJob
m1=1</panel_attributes>
    <additional_attributes>370.0;10.0;650.0;10.0;650.0;1050.0;10.0;1050.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>1230</y>
      <w>1950</w>
      <h>1530</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
cook
m1=0..1</panel_attributes>
    <additional_attributes>10.0;1450.0;10.0;1510.0;1930.0;1510.0;1930.0;10.0;1680.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2070</x>
      <y>0</y>
      <w>340</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>halign=center
*Design Class Diagram (DCD)*
lw=0
fontsize=20
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>230</x>
      <y>2310</y>
      <w>930</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>AvailabilityManagement</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1630</x>
      <y>10</y>
      <w>990</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>MenuManagement</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2630</x>
      <y>60</y>
      <w>290</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>JobManagement
fg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>50</y>
      <w>350</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>MenuManager
--
-menuFeatures: String[]
--
*event sender methods*
+addReceiver(er: MenuEventReceiver)
+removeReceiver(er: MenuEventReceiver)
-notifySectionAdded(sec: Section)
-notifyMenuItemAdded(mi: MenuItem)
-notifyMenuCreated(m: Menu)
-notifyMenuDeleted(m: Menu)

--
*operations methods*
+defineSection(name: String)
+inserItem(j: Job, sec?: Section, desc?: String)
+createMenu(title: String): Menu</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2180</x>
      <y>60</y>
      <w>370</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Menu
--
-title: String
-published: boolean
-inUse: boolean
-features: String[]
-featureValues: boolean[]
--
+create(owner: User, title: String, features: String[])
+addSection(name: String)
+addItem(j: Job, sec?: Section,
                                        desc?: String)
+isOwner(user: User): boolean
+isInUse(): boolean
+getAllRecipes():ArrayList&lt;Recipes&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2060</x>
      <y>190</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
currentMenu
m1=0..1</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>450</y>
      <w>260</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>MenuItem
--
description: String
--
+create(j: Job, desc?: String)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2650</x>
      <y>100</y>
      <w>120</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Job
fg=gray
--
-name</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2550</x>
      <y>100</y>
      <w>120</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
itemjob</panel_attributes>
    <additional_attributes>100.0;20.0;10.0;20.0;10.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2370</x>
      <y>290</y>
      <w>100</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n
freeItems</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2120</x>
      <y>370</y>
      <w>210</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Section
--
name: String
--
+create(name: String)
+addItem(mi: MenuItem)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2150</x>
      <y>240</y>
      <w>90</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n
sections</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2150</x>
      <y>480</y>
      <w>210</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n
sectionItems</panel_attributes>
    <additional_attributes>190.0;50.0;10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1650</x>
      <y>600</y>
      <w>220</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>UseCaseLogicException
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1980</x>
      <y>600</y>
      <w>130</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Exception
--

fg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1860</x>
      <y>630</y>
      <w>140</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>420</y>
      <w>390</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>MenuEventReceiver
{interface}
--

--
/+updateSectionAdded(m: Menu, sec: Section)/
/+updateMenuItemAdded(m: Menu, mi: MenuItem)/
/+updateMenuCreated(m: Menu)/
/+updateMenuDeleted(m: Menu)/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1860</x>
      <y>320</y>
      <w>140</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
eventReceivers
m1=0..n</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1630</x>
      <y>570</y>
      <w>750</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>General module
fg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2650</x>
      <y>560</y>
      <w>260</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>UserManager
--

--
*event sender methods*


--
*operations methods*
+getCurrentUser(): User
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2690</x>
      <y>360</y>
      <w>180</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>User

--

--
+isChef( ): boolean
+isManager(): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2760</x>
      <y>460</y>
      <w>110</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
currentUser
m1=0..1
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2470</x>
      <y>290</y>
      <w>240</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
owner
m1=1</panel_attributes>
    <additional_attributes>220.0;110.0;10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2640</x>
      <y>340</y>
      <w>300</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>UserManagement
fg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2270</x>
      <y>2090</y>
      <w>150</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Service
--
+getMenu():Menu
+getEvent():Event

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2270</x>
      <y>1920</y>
      <w>150</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>ServiceManager
--



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2070</x>
      <y>1690</y>
      <w>220</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
serviceUsed</panel_attributes>
    <additional_attributes>200.0;450.0;10.0;450.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2410</x>
      <y>430</y>
      <w>620</w>
      <h>1110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
owner
m1=1</panel_attributes>
    <additional_attributes>460.0;10.0;560.0;10.0;560.0;1090.0;10.0;1090.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1600</x>
      <y>930</y>
      <w>420</w>
      <h>480</h>
    </coordinates>
    <panel_attributes>KitchenTaskManager
--
--
--
*event sender methods*
+addReceiver(er: KitchenTaskEventReceiver)
+removeReceiver(er: KitchenTaskEventReceiver)
-notifySummarySheetCreated(ss: SummarySheet)
-notifyTaskAdded(t: Task)
-notifyTaskDeleted(t: Task)
-notifyTaskAssigned(t: Task)
-notifyTaskDisassigned(t: Task)
-notifyTaskModified(t: Task)
-notifyTaskDone(t: Task)
-notifyKitchenTurnSat(kt: KitchenTurn)
-notifyTasksSorted(tl: ArrayList&lt;Task&gt;)
--
*operations methods*
+createSummarySheet(s:Service):SummarySheet
+loadSummarySheet(ss: SummarySheet):SummarySheet
+setCurrentSummarySheet(ss: SummarySheet)
+addTask(j : Job):Task
+deleteTask(t : Task)
+assignTask(t: Task, tl: ArrayList&lt;Turn&gt;, 
                     q: String?, t: Time?, c: Cook?)
+disassignTask(t: Task)
+sortTasks(newtl: ArrayList&lt;Tasks&gt;):ArrayList&lt;Tasks&gt;
+getShiftBoard()ShiftBoard
+modifyTask(t:Task, tl:ArrayList&lt;Tasks&gt;?, portions?,
                     duration?, cook?, job?)
+taskDone(t: Task)
+setSaturation(kt: KitchenTurn, v: boolean)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1710</x>
      <y>1400</y>
      <w>140</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
eventReceivers
m1=0..n</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2000</x>
      <y>1270</y>
      <w>200</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
currentSummarySheet
m2=0..1
</panel_attributes>
    <additional_attributes>20.0;20.0;150.0;20.0;150.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1650</x>
      <y>680</y>
      <w>220</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>SummarySheetException
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1860</x>
      <y>660</y>
      <w>150</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;60.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2240</x>
      <y>1870</y>
      <w>290</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>ServiceManagement
fg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>890</y>
      <w>1410</w>
      <h>1380</h>
    </coordinates>
    <panel_attributes>Turn management</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>1860</y>
      <w>260</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>ServiceTurn
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1060</x>
      <y>1860</y>
      <w>260</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>KitchenTurn
--
-saturated: Boolean
--
+create(start:Date, duration:Long, 
     location:String?, deadline:Date?)
+setSaturation(v: boolean)
+ isSaturated(): boolean
+setBlock(b:Block)
+getBlock()Block

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>850</x>
      <y>1510</y>
      <w>380</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>Turn
--
- start: Date
- end: Date
- deadline: Date
- location: String
--
//+setStart(start:Date)
//+setEnd(end:Date)
//+setLocation(loc:String)
//+setDeadline(dl:Date)
+create(start:Date, end:Date, 
        loc:String, rec:Int, duration:Int)
+getDuration():long
+getRecurrency(start:Date,
                          end:Date):ArrayList&lt;Turn&gt;
+hasAvailability():boolean
+modify(start:Date?, end:Date?, 
      location:String?, deadline:Date?)
+isBeforeDeadlineIfSet(dl:Date):boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>1800</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>1830</y>
      <w>390</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>370.0;30.0;370.0;20.0;10.0;20.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>60</x>
      <y>940</y>
      <w>450</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>turnManager
--
--
*event sender methods*
+addReceiver(er: turnEventReceiver)
+removeReceiver(er: turnEventReceiver)
-notifyBlockCreated(b: Block)
-notifyTurnCreated(t: Turn)
-notifyTurnCreated(tl: ArrayList&lt;Turn&gt;)
-notifyTurnModified(t: Turn)
-notifyTurnDeleted(t: Turn)
--
*operations methods*
+getShiftBoard():ShiftBoard
+createKitchenTurn(datesList:ArrayList&lt;Date&gt;, duration:Long, 
                                location:String?, deadline:Date?)
+modifyTurn(tl:ArrayList&lt;Turn&gt;, location:String?, 
                      startTime:Date?, endTime:Date?
                  deadline:Date?, startRec:Date?, endRec:Date?)
+deleteTurn(tl:ArrayList&lt;Turn&gt;, start:Date?, end:Date?)
+setRecurrentTurns(tl:ArrayList&lt;Turn&gt;,start:Date, 
                               end:Date, recurrency:Int, jump:int)
+makeBlock(ArrayList&lt;KitchenTurn&gt;, start:Date?, end:Date?)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>2090</y>
      <w>290</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Block
--
-blockTurns:&lt;KitchenTurn&gt;
--
+create(ktl:ArrayList&lt;KicthenTurn&gt;)
+create()
+add(kt:KitchenTurn)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>2080</y>
      <w>610</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
block
m1=0..1</panel_attributes>
    <additional_attributes>10.0;80.0;590.0;80.0;590.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>850</x>
      <y>950</y>
      <w>260</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Shiftboard
--
--
+add(kt:KitchenTurn)
+remove(t:Turn)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>740</x>
      <y>1210</y>
      <w>420</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>GlobalCalendar
--
--
+contains(t:Turn):boolean
+add(t:Turn)
+remove(t:Turn)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1100</x>
      <y>1090</y>
      <w>220</w>
      <h>790</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
ktList
m1=0..n</panel_attributes>
    <additional_attributes>160.0;770.0;160.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>930</x>
      <y>1430</y>
      <w>60</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
tList
m1=0..n</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>1000</y>
      <w>370</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
shiftBoard
m1=0..1</panel_attributes>
    <additional_attributes>350.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>1270</y>
      <w>260</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
calendar
m1=0..1</panel_attributes>
    <additional_attributes>240.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1980</x>
      <y>750</y>
      <w>220</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>turnException
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2050</x>
      <y>660</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>60</x>
      <y>1450</y>
      <w>390</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>turnEventReceiver
{interface}
--
--
/+updateBlockCreated(b:Block)/
/+updateTurnCreated(t: Turn)/
/+updateTurnCreated(tl: ArrayList&lt;Turn&gt;)/
/+updateTurnModified(t: Turn)/
/+updateTurnDeleted(t: Turn)/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>1290</y>
      <w>140</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
eventReceivers
m1=0..n</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>1700</y>
      <w>160</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
recurrencies
m1=0..1</panel_attributes>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10</x>
      <y>1620</y>
      <w>710</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Recurrency
--
-recTurn:ArrayList&lt;Turn&gt;
--
_+getRecurrentDates(start: Date, end: Date, recurrency: int, jump: Int, time:Date):ArrayList&lt;Date&gt;_
_+getRecurrentTurns(start: Date, end:Date, recurrency:int, jump:int, t):ArrayList&lt;Turn&gt;_

+create()
+add(t:Turn)
+get(index: int): Turn
+modifyRecurrencies(location:String?, 
          startTime:Date?, endTime:Date?
           deadline:Date?, startRec:Date,
           endRec:Date)
+remove(t:Turn)
+getAllturns()
+getTurns(start:Date, end:Date)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>2570</y>
      <w>220</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Cook
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>900</x>
      <y>2570</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>ServiceStaff
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>740</x>
      <y>2380</y>
      <w>300</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Employee
//{interface}
--
+setAvailable(tl:ArrayList&lt;Turn&gt;)
+unsetAvailable(tl:ArrayList&lt;Turn&gt;)
+isAvailable(tl:ArrayList&lt;Turn&gt;):boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>2480</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>2520</y>
      <w>390</w>
      <h>70</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>370.0;50.0;370.0;20.0;10.0;20.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>1690</y>
      <w>570</w>
      <h>770</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
availabilities
m1=0..n</panel_attributes>
    <additional_attributes>200.0;10.0;460.0;10.0;460.0;750.0;10.0;750.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>2380</y>
      <w>350</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>AvailabilityManager
--
*event sender methods*
+addReceiver(er: availabilityEventReceiver)
+removeReceiver(er: availabilityEventReceiver)
-notifyAvailabilitySet(tl, this.currentEmployee)
-notifyAvailabilityUnset(tl, this.currentEmployee)
--
*operations methods*
+setAvailability(tl:ArrayList&lt;Turn&gt;, 
                         start:Date?,end:Date?, 
                         recurrency:int?, jump:int?)
-setAvailability(tl:ArrayList&lt;Turn&gt;)                
+unsetAvailability(tl:ArrayList&lt;Turn&gt;, 
                         start:Date?,end:Date?, 
                         recurrency:int?, jump:int?)
-unsetAvailability(tl:ArrayList&lt;Turn&gt;)                
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>590</x>
      <y>2420</y>
      <w>170</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
currentEmployee
m1=0..1</panel_attributes>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>290</x>
      <y>2720</y>
      <w>300</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>availabilityEventReceiver
{interface}
--
--
/+updateAvailabilitySet(tl, employee)/
/+updateAvailabilityUnset(tl, employee)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>2630</y>
      <w>140</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
eventReceivers
m1=0..n</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
